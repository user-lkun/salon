<?php
/**
 * Created by PhpStorm.
 * User: 35482
 * Date: 2018/6/1
 * Time: 19:35
 */

namespace Application\Model;


use Framework\Model;

class UserModel extends Model
{
    //获取所有信息
    //分页搜索
    public function getall($conditions,$page){

        $sql="select * from users";
        $where ="";//没传收索条件给一个空
        if (!empty($conditions)){
            $where =" where ".implode(" and ",$conditions);
        }
        //分页处理
        //设置每页的显示条数  where xxx limit $start ,$leng;
        $leng=5;
        //获取总页数
        //获取数据库中的总数据条数
        $count=$this->db->fetchColumn("select count(*) from users ".$where);//分页时需要将搜索的条件加上,
        $totalPage=ceil($count/$leng);//总页数
        //判断
        $page=$page>$totalPage?$totalPage:$page;//页码不能大于总页数
        $page=$page<1?1:$page;//页码不能小于1
        $start = ($page - 1) * $leng;//起始页
        $limit=" limit {$start},{$leng}";
        $rows=$this->db->fetchAll($sql.$where.$limit);

        $all_msg['rows']=$rows;
        //将分页信息保存在新数组中
        $all_msg['page']=$page;
        $all_msg['count']=$count;
        $all_msg['leng']=$leng;
        return $all_msg;
    }
    //获取一条信息
    public function getone($id){
        return $this->db->fetchRow("select * from users where user_id='{$id}'");
    }
    //注册,添加会员
    public function register($data){
        //常识判断

        if(empty($data['username'])||empty($data['realname'])){
            $this->error="用户名和真实姓名不能为空";
            return false;
        }
        if(empty($data['telephone'])){
            $this->error="手机号码不能为空";
            return false;
        }
        if($data['password']!=$data['repassword']){
            $this->error="确认密码不正确";
            return false;
        }
        //结束

        //头像为空默认头像
        if(empty($data['photo'])){
            $data['photo']="./Public/default.png";
        }
        if(empty($data['remark'])){
            $data['remark']="无";
        }

        $password=md5($data['password']);
        $sex=array_sum($data['sex']);
        return $this->db->execute("insert into users(`username`,`password`,`realname`,`sex`,`telephone`,`photo`,`remark`)VALUES(
'{$data['username']}',
'{$password}',
'{$data['realname']}',
'{$sex}',
'{$data['telephone']}',
'{$data['photo']}',
'{$data['remark']}'
)");

    }
    //修改编辑会员
    public function update($data){
        $showone=$this->db->fetchRow("select * from users where user_id='{$data['id']}'");
        $showuser=$this->db->fetchAll("select * from users where username='{$data['username']}'");

        if(empty($data['username'])){
            $this->error="用户名不能为空";
            return false;
        }
        $oldpassword=md5($data['password']);
        if($showone['password']!=$oldpassword){
            $this->error="原密码错误,请重新输入";
            return false;
        }
        if (isset($showuser['username'])){
            if ($data['username'] == $showuser['username']) {
                $this->error = "用户名已经被注册,请重新输入";
                return false;
            }
        }
        if(empty($data['newpassword'])||empty($data['repassword'])){
            $this->error="新密码不能为空";
            return false;
        }
        if($data['newpassword']!=$data['repassword']){
            $this->error="新密码不一致,重新输入";
            return false;
        }

        $newpassword=md5($data['newpassword']);
        if($newpassword==$showone['password']){
            $this->error="不能与原密码一致";
            return false;
        }
        //头像为空默认头像
        if(empty($data['photo'])){
            $data['photo']="./Public/default.png";
        }

        $sex=array_sum($data['sex']);
        return $this->db->execute("update users set 
username='{$data['username']}',
password='{$newpassword}',
realname='{$data['realname']}',
telephone='{$data['telephone']}',
remark='{$data['remark']}',
money='{$data['money']}',
sex='{$sex}',
photo='{$data['photo']}'
 where user_id='{$data['id']}'
");
    }
    //删除会员
    public function getout($id){

        $this->db->execute("delete from users where user_id='{$id}'");
    }
    //会员登录
    public function checklogin($data){
        $first=$this->db->fetchRow("select * from users where username='{$data['username']}'");
        @session_start();
        if(strtolower($data['captcha'])!=strtolower($_SESSION['captcha'])){
            $this->error="验证码不正确";
            return false;
        }
        if(empty($first)){
            $this->error="用户名不存在,或密码错误";
            return false;
        }
        $password=md5($data['password']);
        if($password!=$first['password']){
            $this->error="密码错误";
            return false;
        }
        return $first;
    }
    //充值
    public function moneyin($data){

        $money=$data['money'];
        if(!is_numeric($money)){
            $this->error="请输入数字";
            return false;
        }
        if(empty($money)||$money<0){
            $this->error="充值金额不能为0";
            return false;
        }

        if($money>=500||$money<1000){
            $money.=+100;
        }
        if($money>=1000||$money<1500){
            $money.=+300;
        }
        //单次充值大于或等于5千自动升级
        if($money>=5000||$money<5500){
            $money.=+2000;
            $this->db->execute("update users set is_vip=1 ");
        }


        $userlist=$this->db->fetchAll("select * from users where user_id='{$data['id']}'");
        $memberlist=$this->db->fetchAll("select * from member");
        $nowmoney=$userlist['money']+$money;
        $this->db->execute("update users set money='{$nowmoney}'");
        $time=time();
        $this->db->execute("update histories
 set 
`type`=1,
amount='{$money}',
remainder=remainder+'{$money}',
content='充值了'.'{$money}'.'元',
`time`='{$time}'
");
    }
    //id关联用户名
    public function mix($id){
        return $this->db->fetchRow("select username,user_id from users where user_id='{$id}'");
    }

}